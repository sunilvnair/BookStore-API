@page "/authors/"
@inject IAuthorRepository _repo



<PageTitle Title="List of authors" />
@if (authModel == null)
{

    <LoadingMessage Message=" Loading author(s) data ....." />
}
else
{
<AuthorizeView Roles="Administrator">
    <a href="/authors/create" class="btn btn-primary">
        <span class="oi oi-plus"></span> Create New Author
    </a>
</AuthorizeView>

    if (authModel.Count < 1)
    {
        <LoadingMessage Message=" No author details available . Please use 'Create New Author'
                        link for creating new author details" />
    }
    else { 
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>First Name </th>
                        <th>Last Name </th>
                        <th>Actions </th>
                    </tr>

                </thead>
                <tbody>
                    @foreach (var author in authModel)
                    {
                        <tr>
                            <td>@author.Firstname</td>
                            <td>@author.Lastname</td>
                            <td>
                                <a href="/authors/view/@author.Id" class="btn btn-primary">
                                    <span class="oi oi-document"></span>
                                </a>
                                <AuthorizeView Roles="Administrator">
                                    <a href="/authors/edit/@author.Id" class="btn btn-warning">
                                        <span class="oi oi-pencil"></span>
                                    </a>

                                    <a href="/authors/delete/@author.Id" class="btn btn-danger">
                                        <span class="oi oi-delete"></span>
                                    </a>
                                </AuthorizeView>

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
    }
}

@code {
    private IList<Author> authModel;
    protected async override Task OnInitializedAsync()
    {
        authModel = await _repo.Get(Endpoints.AuthorsEndpoint);
    }

}
