@page "/login"


@inject IAuthenticationRepository _authRepo
@inject NavigationManager _navManager



    <PageTitle Title="Login" />
    @if (!response)
    {

            <LoadingMessage Message= "Something went wrong with the login attempt"/>

       
    }
    <div class="card-body">
        <EditForm Model="Model" OnValidSubmit="logmein">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="email">Email Address</label>
                <InputText Id="email" class="form-control" @bind-Value="Model.EmailAddress" />
                <ValidationMessage For="@(() => Model.EmailAddress)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="Model.Password" />
                <ValidationMessage For="@(() => Model.Password)" />
            </div>
            
            <button type="submit" class="btn btn-primary btn-block">Login </button>

        </EditForm>
    </div>


@code {
    private LoginModel Model = new LoginModel();
    private bool response = true;
    private async Task logmein()
    {
        response = await _authRepo.Login(Model);

        if (response)
        {
            _navManager.NavigateTo("/");
        }
        
    }
}
